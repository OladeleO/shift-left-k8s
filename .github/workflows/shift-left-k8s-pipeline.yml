name: Vulnerable Kubernetes CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          mv ./kind /usr/local/bin/kind

      - name: Create Kubernetes Cluster
        run: |
          kind create cluster --name goat-cluster
          export KUBECONFIG="$(kind get kubeconfig-path --name="goat-cluster")"
          kubectl get nodes

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          mv ./kubectl /usr/local/bin/kubectl

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Clone Kubernetes Goat Repository
        run: |
          git clone https://github.com/madhuakula/kubernetes-goat.git

      - name: List Directory Contents to Confirm Clone
        run: |
          ls -al

      - name: Deploy Kubernetes Goat Using Manifests
        run: |
          cd kubernetes-goat
          kubectl apply -f scenarios/*.yaml
          kubectl get pods -A
      - name: Verify Deployment
        run: |
          kubectl get services -A
          kubectl get pods -A
        
      - name: Scan YAML Manifests with kube-score (SAST)
        run: |
          curl -LO https://github.com/zegl/kube-score/releases/download/v1.11.0/kube-score_1.11.0_linux_amd64.tar.gz
          tar -xf kube-score_1.11.0_linux_amd64.tar.gz
          ./kube-score score https://raw.githubusercontent.com/madhuakula/kubernetes-goat/main/kubernetes-goat.yaml > kube-score-report.txt
        continue-on-error: true

      - name: Scan Container Images with Trivy (SCA)
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          trivy image madhuakula/kubernetes-goat:latest --severity HIGH,CRITICAL --format json --output trivy-report.json
        continue-on-error: true

      - name: Run Kube-hunter for Security Testing (Penetration Testing)
        run: |
          pip install kube-hunter
          kube-hunter --remote $(kubectl cluster-info | grep 'Kubernetes control plane' | awk '/https/ {print $NF}') --json > kube-hunter-report.json
        continue-on-error: true

      - name: Run Kube-bench for CIS Benchmark (Compliance)
        run: |
          curl -LO https://github.com/aquasecurity/kube-bench/releases/download/v0.6.9/kube-bench_0.6.9_linux_amd64.tar.gz
          tar -xf kube-bench_0.6.9_linux_amd64.tar.gz
          ./kube-bench --json > kube-bench-report.json
        continue-on-error: true

      - name: Monitor Runtime Security with Falco (Runtime Security)
        run: |
          curl -s https://dl.bintray.com/falcosecurity/bin/falco-0.29.1-x86_64.deb -o falco.deb
          sudo dpkg -i falco.deb
          sudo falco -u | tee falco-output.txt
        continue-on-error: true

      - name: Use Tetragon for eBPF-based Monitoring (Runtime Security)
        run: |
          curl -LO https://github.com/cilium/tetragon/releases/download/v0.6.0/tetragon-v0.6.0-linux-amd64.tar.gz
          tar -xf tetragon-v0.6.0-linux-amd64.tar.gz
          sudo ./tetragon > tetragon-output.txt
        continue-on-error: true

      - name: Upload Reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            kube-score-report.txt
            trivy-report.json
            kube-hunter-report.json
            kube-bench-report.json
            falco-output.txt
            tetragon-output.txt
